@using mvc.Services;
@using mvc.Models;
@using mvc.Data;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.EntityFrameworkCore;


@inject mvc.Services.UserService UserService
@inject mvc.Services.ParticipantService ParticipantService

@model List<mvc.Models.EventModel>

<h1 class="mb-2">Events</h1>
<div>
  <a class="mb-3 nav-link btn btn-success w-25 text-white text-center" asp-controller="Event" asp-action="New">New</a>
</div>

<table class="table table-stripped">
  <thead>
    <tr>
      <th class="text-center">Title</th>
      <th class="text-center">Date</th>
      <th class="text-center">Participants</th>
      <th class="text-center">Location</th>
      <th class="text-center">Actions</th>
    </tr>
  </thead>
  <tbody>
    @foreach (var eventObject in Model)
    {
      <tr>
        <th><a class="text-center" asp-controller="Event" asp-action="Show" asp-route-id="@eventObject.Id">@eventObject.Title</a></th>
        <td class="text-center">@eventObject.EventDate</td>
        <td class="text-center">@eventObject.ParticipantsCount / @eventObject.MaxParticipants</td>
        <td class="text-center">@eventObject.Location</td>
        <td>
          @if (await UserService.GetCurrentUserIsTeacher())
          {
            <div class='dropdown'>
              <button class="btn btn-success dropdown-toggle" type="button" data-bs-toggle="dropdown">Actions</button>
              <ul class="dropdown-menu">
                <li><a class="dropdown-item" asp-controller="Event" asp-action="Edit" asp-route-id="@eventObject.Id">Edit</a></li>
                <li><a class="dropdown-item" onclick="confirmDelete(event)" asp-controller="Event" asp-action="Delete" asp-route-id="@eventObject.Id">Delete</a></li>
              </ul>
            </div>
          }
          else
          {
            @if(await ParticipantService.IsParticipant(@eventObject.Id, await UserService.GetCurrentUserId()))
            {
              <a class="btn btn-danger" asp-controller="Event" asp-action="UnsubscribeToEvent" asp-route-id="@eventObject.Id">Unsubscribe</a>
            }
            else
            {
              <a class="btn btn-success" asp-controller="Event" asp-action="SubscribeToEvent" asp-route-id="@eventObject.Id">Subscribe</a>
            }
          }
        </td>
      </tr>
    }
  </tbody>
</table>

@if (TempData["Info"] != null)
{
  <div class="toast-container ms-2 position-static">
    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header bg-info">
        <strong class="me-auto">Info</strong>
        <small class="text-body-secondary">A l'instant</small>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body"->
        @TempData["Info"]
      </div>
    </div>
  </div>
}

@if (TempData["Success"] != null)
{
  <div class="toast-container ms-2 position-static">
    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header bg-success text-white">
        <strong class="me-auto">Success</strong>
        <small class="text-body-secondary">A l'instant</small>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body">
        @TempData["Success"]
      </div>
    </div>
  </div>
}

<script>
  function confirmDelete() {
    if(!confirm('Are you sure to want to delete this Event ?')) {
      event.preventDefault();
    }
  }
</script>
